from decimal import Decimal
import pandas as pd
from collections import OrderedDict
import datetime

[{'Variables': 'Fecha de informaci√≥n', 'Fecha': '2024-03-27T00:00:00'}]


def convert_to_dynamodb_format(obj):
    """
    Convierte objetos en un formato compatible con DynamoDB.
    - Convierte floats a Decimals.
    - Convierte datetime.datetime y pd.Timestamp a strings en formato ISO 8601.
    - Convierte pandas DataFrame a una lista de diccionarios, cada uno representando una fila del DataFrame.
    """
    if isinstance(obj, datetime.datetime):
        return obj.isoformat()
    elif isinstance(obj, pd.Timestamp):
        return obj.strftime('%Y-%m-%dT%H:%M:%S')
    elif isinstance(obj, float):
        return Decimal(str(obj))
    elif isinstance(obj, int):
        return Decimal(str(obj))
    elif isinstance(obj, pd.DataFrame):
        return obj.applymap(lambda x: convert_to_dynamodb_format(x)).to_dict(orient='records')
    elif isinstance(obj, list):
        return [convert_to_dynamodb_format(x) for x in obj]
    elif isinstance(obj, dict):
        return {k: convert_to_dynamodb_format(v) for k, v in obj.items()}
    return obj
